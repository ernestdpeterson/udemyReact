{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","serviceWorker.js","index.js","robots.js"],"names":["Card","props","className","src","sorce","alt","name","email","CardList","robots","cardComponent","map","user","i","key","id","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","role","aria-label","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","Boolean","window","location","hostname","match","ReactDOM","render","username","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4d9949fe.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n  return(\n    <div className= \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={props.sorce} alt=\"cartoon Kitty\"/>\n      <div>\n        <h2>{props.name}</h2>\n        <p>{props.email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\n  // uncomment bellow to test error handling\n\n  // if (true) {\n  //   throw new Error('There was an Error.');\n  // }\n\n  const cardComponent = robots.map(\n    (user, i) => {\n      return (\n        <Card \n          key={robots[i].id} \n          id={robots[i].id+4} \n          name={robots[i].name} \n          email={robots[i].email} \n          sorce={`https://robohash.org/${robots[i].id+4}.png/set_set4?size=100x100`}/>)\n    }\n  );\n\n  return (\n    <div>\n      {cardComponent}\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n  return (\n    <div className='pa2'>\n      <input \n        className='pa3 ba b--green bg-lightest-blue br2'\n        type='search' \n        placeholder=\"Search Kitties\"\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{\n      overflowY: 'scroll',\n      border: '1px solid black',\n      height: '700px'\n    }}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n  componentDidCatch(error, info) {\n    this.setState({hasError: true})\n  }\n  render() {\n    if (this.state.hasError) {\n      return <h1>Uh Oh! Something Bad Happend. <span role=\"img\" aria-label=\"sick face emoji\">&#x1f912;</span></h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({robots: users}))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n        return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">Kitty Friends</h1>\n        <SearchBox searchChange={this.onSearchChange}/>\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport {robots} from './robots';\n\nReactDOM.render(\n  <App robots={robots}/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n"],"sourceRoot":""}